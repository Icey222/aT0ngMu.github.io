{"meta":{"title":"aT0ngMu是个小机灵鬼儿づ￣3￣","subtitle":null,"description":null,"author":"aT0ngMu","url":"https://at0ngmu.github.io"},"pages":[{"title":"404","date":"2018-11-18T12:02:52.000Z","updated":"2018-11-18T12:02:52.580Z","comments":true,"path":"404/index.html","permalink":"https://at0ngmu.github.io/404/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-11-18T13:22:33.000Z","updated":"2018-11-18T13:23:19.579Z","comments":true,"path":"categories/index.html","permalink":"https://at0ngmu.github.io/categories/index.html","excerpt":"","text":""},{"title":"message","date":"2018-11-20T06:24:15.000Z","updated":"2018-11-20T06:24:15.053Z","comments":true,"path":"message/index.html","permalink":"https://at0ngmu.github.io/message/index.html","excerpt":"","text":""},{"title":"about","date":"2018-11-19T01:46:12.000Z","updated":"2018-11-20T03:55:46.319Z","comments":true,"path":"about/index.html","permalink":"https://at0ngmu.github.io/about/index.html","excerpt":"","text":"以前写博客的时候一开始是在博客园，后来又在CSDN，但是看到别人的博客都是自己搭建的，既个性又炫酷，所以一直跃跃欲试想要搭建一个属于自己的个性博客。所以后期从csdn导入过来的时候，大部分图片都带csdn的水印。后期陆陆续续就进入考研复习阶段了，但是又不想从此荒芜对技术的学习，所以就立了一个小小的flag，每周能保证产出一篇高质量的博文。最后有关博客的一些不足的地方，希望各路大佬能够给予批评指正~"},{"title":"tags","date":"2018-11-18T13:20:51.000Z","updated":"2018-11-18T13:21:36.346Z","comments":true,"path":"tags/index.html","permalink":"https://at0ngmu.github.io/tags/index.html","excerpt":"","text":""},{"title":"search","date":"2018-11-18T12:02:42.000Z","updated":"2018-11-18T12:02:42.770Z","comments":true,"path":"search/index.html","permalink":"https://at0ngmu.github.io/search/index.html","excerpt":"","text":""}],"posts":[{"title":"CTF中上传绕过各种姿势（未完待续……）","slug":"CTF中上传绕过各种姿势（未完待续……）","date":"2018-11-20T05:42:54.000Z","updated":"2018-11-20T05:48:55.147Z","comments":true,"path":"2018/11/20/CTF中上传绕过各种姿势（未完待续……）/","link":"","permalink":"https://at0ngmu.github.io/2018/11/20/CTF中上传绕过各种姿势（未完待续……）/","excerpt":"","text":"之前做过的一个比较简单的文件上传，上传图片木马后，直接bp改包，利用%00截断改后缀就可以得到flag。00截断题目00截断wp今天遇到了一个需要绕过技巧的文件上传，所以，简单学习记录一下。题目来自于bugku解决思路：首先上传一个图片木马，bp抓包后，需要修改两处： 分别对上述两处更改做一下解释：小写改为大写：类型检测大小写绕过当时做题的时候有两个地方不是很清楚，1、为什么要把小写改成大写。2、为什么会出现两个content-type，这两个又有什么区别1、后来经大佬提点，可能是服务器端验证，也就是代码校验，很多带waf的网站，在进行文件上传的时候。改了大小写以后就可以进去，有的时候会是content-type的multipart改为Multipart，有的时候是file改为File，还有把-改为+。这些都是与后台的代码有关。2、第二个问题解决的时候，查了很多的资料，但是最终都搞清楚了。简单来说，上面的就是在表单上传文件时的类型，下面的就是上传文件时的文件类型。具体的请参考：https://www.jianshu.com/p/29e38bcc8a1d后缀名改为.php5利用过滤黑名单的方式防止上传。如果直接上传phtml，绕过黑名单，phtml还被能解析成php。符合的后缀包括 php、php3、php4、php5、phtml、pht等原理：在php5.conf文件中有相关php后缀的正则，只要符合该正则的php后缀，都可以被解析。另外附上PHP文件上传过程中基于白名单、黑名单、基于MIME的认证以及目录认证的代码样例：https://blog.csdn.net/hitwangpeng/article/details/47060671另，个人认为这是比较全的上传绕过的姿势了https://thief.one/2016/09/22/%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%A7%BF%E5%8A%BF%E6%B1%87%E6%80%BB-%E6%AC%A2%E8%BF%8E%E8%A1%A5%E5%85%85/","categories":[{"name":"CTF","slug":"CTF","permalink":"https://at0ngmu.github.io/categories/CTF/"}],"tags":[{"name":"大小写绕过","slug":"大小写绕过","permalink":"https://at0ngmu.github.io/tags/大小写绕过/"}]},{"title":"反向代理服务器-HTTP请求头中的XFF","slug":"反向代理服务器-HTTP请求头中的XFF","date":"2018-11-20T04:15:40.000Z","updated":"2018-11-20T05:41:10.059Z","comments":true,"path":"2018/11/20/反向代理服务器-HTTP请求头中的XFF/","link":"","permalink":"https://at0ngmu.github.io/2018/11/20/反向代理服务器-HTTP请求头中的XFF/","excerpt":"","text":"在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录XFF原理性认知一、反向代理说明反向代理即：通过代理服务器接收来自外部网络的请求，然后代理服务器再转发给内网服务器，再将内部服务器得到的结果通过代理服务器返回给外部网络的客户端。二、反向代理功能利用反向代理可以提供WAF功能，阻止web攻击；而在大型网站中通常将反向代理作为公网访问地址，位于防火墙外部，Web服务器是内网。如果内网服务器返回错误消息，代理服务器会先行截取该消息并更改标头中列出的任何 URL，然后再将消息发送给客户机。如此可防止外部客户机获取内部内容服务器的重定向 URL。三、HTTP请求中源IP从HTTP请求中获得请求者的IP地址有两种方式：Remote Address和X-Forward-For。但是两者的安全性不通：Remote Address为HTTP请求的源地址，HTTP协议三次握手与发送响应报文时都使用的此地址，因此一旦请求者伪造Remote Address地址，他将无法收到HTTP响应报文，此时伪造没有任何意义。这也就使得Remote Address默认具有防篡改的功能。而在一些大型网站中，外部网络的用户的HTTP请求会经过反向代理服务器转发给内网服务器，内网服务器这时候收到的Remote Address地址并不是外部网络用户地址，而是反向代理服务器的IP。因此，对于内网服务器来说，无法查看用户IP，所以这时，HTTP扩展头部X-Forward-For（XFF）起到了作用。当反向代理服务器转发外部网络用户的HTTP请求时，需要将用户的真实IP地址写入到X-Forward-For中，以便后端服务能够使用。由于X-Forward-For是可修改的，所以X-Forward-For中的地址在某种程度上不可信。因此，在进行与安全有关的操作时，只能通过Remote Address获取用户的IP地址，不能相信任何请求头。CC代理属于正向代理：","categories":[{"name":"CTF","slug":"CTF","permalink":"https://at0ngmu.github.io/categories/CTF/"}],"tags":[{"name":"反向代理","slug":"反向代理","permalink":"https://at0ngmu.github.io/tags/反向代理/"},{"name":"XFF","slug":"XFF","permalink":"https://at0ngmu.github.io/tags/XFF/"}]},{"title":"集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之二","slug":"集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之二","date":"2018-11-20T02:42:15.000Z","updated":"2018-11-20T03:00:10.469Z","comments":true,"path":"2018/11/20/集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之二/","link":"","permalink":"https://at0ngmu.github.io/2018/11/20/集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之二/","excerpt":"","text":"在上一篇搭建好web环境后，再进行Ubuntu下DVWA的搭建，在搭建过程中会出现各种各样的问题。以下是本菜鸡在搭建过程中出现的问题以及解决办法~首先在GitHub下载安装DVWA，压缩包放到 /var/www/html之后解压缩atongmu@atongmu-virtual-machine:~/Downloads$ sudo cp -i DVWA-master.zip /var/www/html atongmu@atongmu-virtual-machine:/var/www/html$sudo unzip DVWA-master.zip 在浏览器输入127.0.0.1/DVWA-master/setup.php后页面显示：需要我们修改配置文件后缀名为.phpatongmu@atongmu-virtual-machine:/var/www/html/DVWA-master/config$ sudo mv config.inc.php.dist config.inc.php 菜鸡装到这里，再重启apache2以后发现，在DVWA界面出现了很多PHP不完整代码，如同一个正常人长了天花一般触目惊心……后经分析原因是apache2无法解析PHP代码。到这里，关键一步就是：sudo apt-get install apache2 sudo apt-get install php7.2 sudo apt-get install libapache2-mod-php 第三条命令的目的就是：apache缺少PHP的延展模块，所以无法解析PHP~之后，页面显示正常……下一步开始修改下面的disable and no 第一处：sudo vi php.ini 把allow_url_include = off改为on 把allow_url_fopen = off改为on 第二处：sudo apt-get install php7.2-gd sudo /etc/init.d/apache2 restart 第三处sudo apt-get install php7.2-mysql sudo /etc/init.d/apache2 restart 在进行第二三处的时候请注意：搭建的dvwa的PHP版本是否是7.2，因为在之前添加apache的PHP扩展模块时，相当于安装了从5.6到7.2的所有模块，dvwa会自动匹配最高级版本，现在的PHP最高版本为7.2.第四处：ls -al /var/www/html/DVWA-master/external/phpids/0.6/lib/IDS/tmp sudo /etc/init.d/apache2 restart sudo chmod 666 /var/www/html/DVWA-master/hackable/uploads sudo chmod 666 /var/www/html/DVWA-master/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt sudo /etc/init.d/apache2 restart sudo chmod 666 /var/www/html/DVWA-master/config sudo /etc/init.d/apache2 restart 之后本以为会顺利搭完……菜鸡又出现了状况……在点击下面的creat databases时，页面返回是…… 之后才发现 这里的password要与MySQL一致才可以……重启apache，重新加载url，顺利创建……以下列出dvwa的默认登陆账号与密码：admin/password gordonb/abc1231337/charley pablo/letmein*smithy/password","categories":[{"name":"环境搭建","slug":"环境搭建","permalink":"https://at0ngmu.github.io/categories/环境搭建/"}],"tags":[{"name":"DVWA搭建","slug":"DVWA搭建","permalink":"https://at0ngmu.github.io/tags/DVWA搭建/"},{"name":"lamp搭建","slug":"lamp搭建","permalink":"https://at0ngmu.github.io/tags/lamp搭建/"},{"name":"sqli-labs","slug":"sqli-labs","permalink":"https://at0ngmu.github.io/tags/sqli-labs/"}]},{"title":"集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之一","slug":"集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之一","date":"2018-11-20T01:53:58.000Z","updated":"2018-11-20T03:00:08.008Z","comments":true,"path":"2018/11/20/集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之一/","link":"","permalink":"https://at0ngmu.github.io/2018/11/20/集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之一/","excerpt":"","text":"众所周知，我们在搭建DVWA时，要先搭建好web环境—LAMP（Linux+Apache2+Mysql+PHP5.6）。那么以下就是LAMP具体搭建步骤及问题解决方式。第一步，安装并配置Mysql。安装顺利的话，直接输入以下三条命令：sudo apt-get install mysql-server sudo apt isntall mysql-client sudo apt install libmysqlclient-dev 但总会有不顺利的情况。。。eading package lists... Done Building dependency tree Reading state information... Done Some packages could not be installed. This may mean that you have requested an impossible situation or if you are using the unstable distribution that some required packages have not yet been created or been moved out of Incoming. The following information may help to resolve the situation: The following packages have unmet dependencies: mysql-server : Depends: mysql-server-5.1 but it is not going to be instaed E: Unable to correct problems, you have held broken packages. 解决办法：sudo vi /etc/apt/source.list 在此配置文件中上方添加以下内容：deb http://mirrors.aliyun.com/ubuntu/ precise main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ precise-security main restricted universe multiver deb http://mirrors.aliyun.com/ubuntu/ precise-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ precise-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ precise-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ precise main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ precise-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ precise-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ precise-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ precise-backports main restricted universe multiverse 更新一下列表（这个过程比较漫长）sudo apt-get update &amp;&amp; sudo apt-get -y upgrade 再重新执行上述三条命令 下面测试一下mysql是否安装成功sudo netstat -tap | grep mysql 进入MySQL服务mysql -uroot -p你的密码 第二步，安装PHP5.6。执行以下命令sudo apt-get install python-software-properties sudo add-apt-repository ppa:ondrej/php sudo apt-get update sudo apt-get -y install php5.6 php5.6-mcrypt php5.6-mbstring php5.6-curl php5.6-cli php5.6-mysql php5.6-gd php5.6-intl php5.6-xsl php5.6-zip 最后查看一下php版本php -v 第三步，安装apache2sudo apt-get install apache2 等待安装完成……","categories":[{"name":"环境搭建","slug":"环境搭建","permalink":"https://at0ngmu.github.io/categories/环境搭建/"}],"tags":[{"name":"DVWA搭建","slug":"DVWA搭建","permalink":"https://at0ngmu.github.io/tags/DVWA搭建/"},{"name":"lamp搭建","slug":"lamp搭建","permalink":"https://at0ngmu.github.io/tags/lamp搭建/"},{"name":"sqli-labs","slug":"sqli-labs","permalink":"https://at0ngmu.github.io/tags/sqli-labs/"}]},{"title":"记一道集PHP伪协议&PHP反序列化综合运用的CTF","slug":"记一道集PHP伪协议-PHP反序列化综合运用的CTF","date":"2018-11-19T07:45:01.000Z","updated":"2018-11-19T08:29:53.761Z","comments":true,"path":"2018/11/19/记一道集PHP伪协议-PHP反序列化综合运用的CTF/","link":"","permalink":"https://at0ngmu.github.io/2018/11/19/记一道集PHP伪协议-PHP反序列化综合运用的CTF/","excerpt":"","text":"题目链接首先拿到题目后，毫无疑问，查看一下源码&lt;!-- $user = $_GET[&quot;txt&quot;]; $file = $_GET[&quot;file&quot;]; $pass = $_GET[&quot;password&quot;]; if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;welcome to the bugkuctf&quot;)){ echo &quot;hello admin!&lt;br&gt;&quot;; include($file); //hint.php }else{ echo &quot;you are not admin ! &quot;; } --&gt; 解读一下源码的意思：1.get方式传入三个参数：txt，file，password2.file_get_contents()函数的作用是将$user的内容读取出来，在此即为将user读取出来的内容数值与类型完全等于welcome to the bugkuctf。（三个等于号） 3.如果满足if条件，则打印输出”hello admin!”。并且将包含的hint.php内容显示出来 在此，可以运用两个PHP的伪协议* php://filter 可以进行任意文件的读取。有关php://filter的详细了解* php://input 可以读取没有处理过的post数据通过对以上代码的分析，我们有了解决思路：* 对于file_get_contents($user,’r’)===”welcome to the bugkuctf”，我们可以借用php伪协议php://input，要想使user中的字符串读取出来与三等号后的内容一致，就必须使他的传入参数txt，来post welcome to the bugkuctf* 再来看include($file); //hint.php 我们可以用php://filter来进行hint.php的base编码，从而可以读取出hint.php的base编码，从而可以读取出hint.php的内容。构造payload:index.php?txt=php://input&amp;file=php://filter/read=convert.base64-encode/resource=hint.php 利用bp改包 得到回显 发现一组base64,再进行base64解码，发现又有一组代码#hint.php &lt;?php class Flag{//flag.php public $file; public function __tostring(){ if(isset($this-&gt;file)){ echo file_get_contents($this-&gt;file); echo &quot;&lt;br&gt;&quot;; return (&quot;good&quot;); } } } ?&gt; 再来分析这段代码看到flag.php，猜测flag或许就从这段代码中找出。发现了比较关键的一个函数tostring(),此函数的作用是将Flag类作为字符串执行时会自动执行此函数，并且将变量$file作为文件名输出文件内容。但是，这个时候发现并没有代码显示可以调用这个类，如果没有调用这个类，也就无法执行tostring()函数。而且，还有一个password参数没有用上，所以考虑，或许还会存在另一段代码。那就接着上一步，把hint.php换成index.php会有什么发现呢？果不其然，确实又有了重大发现： 再次得到回显 解码后index.php &lt;?php $txt = $_GET[&quot;txt&quot;]; $file = $_GET[&quot;file&quot;]; $password = $_GET[&quot;password&quot;]; if(isset($txt)&amp;&amp;(file_get_contents($txt,&apos;r&apos;)===&quot;welcome to the bugkuctf&quot;)){ echo &quot;hello friend!&lt;br&gt;&quot;; if(preg_match(&quot;/flag/&quot;,$file)){ echo &quot;ä¸è½ç°å¨å°±ç»ä½ flagå¦&quot;; exit(); }else{ include($file); $password = unserialize($password); echo $password; } }else{ echo &quot;you are not the number of bugku ! &quot;; } ?&gt; &lt;!-- $user = $_GET[&quot;txt&quot;]; $file = $_GET[&quot;file&quot;]; $pass = $_GET[&quot;password&quot;]; if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;welcome to the bugkuctf&quot;)){ echo &quot;hello admin!&lt;br&gt;&quot;; include($file); //hint.php }else{ echo &quot;you are not admin ! &quot;; } --&gt; 结果发现了正则匹配函数preg_match(“/flag/“,$file)，对flag进行了正则匹配。再来接着看，else代码块中又一次包含了$file,并且对$password进行反序列化。通过对上述hint.php的解读，我们就可以构造password，password为Flag类型，字符串变量file=flag.php。构造的序列化对象payload，password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;} 在这里简单说一下php的反序列化将原来的某个对象进行序列化之后，从序列化后的结果中就可以知道这个对象的具体类型和值在这里简单说一下序列化后的几个字母的意思，以password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}为例* O（大写）：对象class* 4：4个字符* “Flag”：对象名* 1：数量，一个* s：string* {}里的为参数反序列化可以理解为序列化的的逆运算","categories":[{"name":"CTF","slug":"CTF","permalink":"https://at0ngmu.github.io/categories/CTF/"}],"tags":[{"name":"PHP伪协议","slug":"PHP伪协议","permalink":"https://at0ngmu.github.io/tags/PHP伪协议/"},{"name":"反序列化","slug":"反序列化","permalink":"https://at0ngmu.github.io/tags/反序列化/"}]},{"title":"信息收集之nmap","slug":"信息收集之nmap常用命令","date":"2018-11-19T07:26:49.000Z","updated":"2018-11-19T07:41:27.769Z","comments":true,"path":"2018/11/19/信息收集之nmap常用命令/","link":"","permalink":"https://at0ngmu.github.io/2018/11/19/信息收集之nmap常用命令/","excerpt":"","text":"探测主机存活常用方式扫描网段主机：进行ping扫描nmap -sP 192.168.181.50/100 扫描单个主机nmap 192.168.181.50 发送tcp的ack包探测主机是否存活nmap 192.168.181.50 -sA 半开放扫描，不会被目标主机记入系统日志，但须root权限nmap -sS 192.168.181.50 三次握手tcp扫描易被目标主机检测到，但不需root权限nmap -sT 192.168.181.50 另一目标主机对主机发送数据，获取主机ipnmap -sL 192.168.181.50 扫描UDP端口nmap -sU 192.168.181.50 版本检测nmap -sV 192.168.181.50 操作系统检测namp -O 192.168.181.50 -PN绕过ping命令nmap -O -PN 192.168.181.50 检测是否存在常见漏洞nmap --script=vuln 192.168.181.50 在局域网扫描主机特定端口-n加快扫描速度nmap -n -p445 --script=broadast 192.168.181.50 nmap脚本使用nmap脚本扫描时可设置”–script=类别”的方式进行扫描auth:可作为检测部分应用弱口令，也可负责处理鉴权证书（绕开鉴权）的脚本。nmap --script=auth 192.168.181.129 broadcast:局域网内探测服务开启情况，如dhcp/dns/sqlserver等服务.nmap -n -p445 --script=broadcast 192.168.181.129 brute:提供暴力破解，如http/snmap等应用。提供的暴力破解方式可对数据库，smb,snmp等进行简单密码 的暴力猜解nmap --script=brute 192.168.181.129 default:提供基本脚本扫描能力。默认的脚本扫描，主要搜集各种应用服务的信息，收集到后，可再针对具体服务进行攻击nmap -sC 192.168.181.50 检查目标主机是否有常见漏洞nmap --script=vuln 192.168.181.50 external:利用第三方数据库或资源，如：whois解析nmap --script external 192.168.181.129","categories":[{"name":"渗透测试","slug":"渗透测试","permalink":"https://at0ngmu.github.io/categories/渗透测试/"}],"tags":[{"name":"端口扫描","slug":"端口扫描","permalink":"https://at0ngmu.github.io/tags/端口扫描/"},{"name":"信息收集","slug":"信息收集","permalink":"https://at0ngmu.github.io/tags/信息收集/"}]},{"title":"USB流量分析","slug":"USB流量分析","date":"2018-11-19T07:14:10.000Z","updated":"2018-11-19T07:20:40.514Z","comments":true,"path":"2018/11/19/USB流量分析/","link":"","permalink":"https://at0ngmu.github.io/2018/11/19/USB流量分析/","excerpt":"","text":"USB流量分析- USB接口简介通过监听USB接口流量，可获取键盘击键，鼠标移动与点击，存储设备的明文传输通信，USB无线网卡网络传输内容等。- 题目wireshark打开数据包后发现为usb协议 USB协议数据部分在Leftover Capture Data域中，使用tshark命令将其单独提取出来tshark -r udn.pcapng -T fields -e usb.capdata &gt; usbdata.txt cat命令查看分离出的usbdata.txtcat usbdata.txt 由于USB流量分为键盘流量和鼠标流量，而键盘数据包的数据长度为八个字节，鼠标数据包的数据长度为四个字节。键盘数据包击键信息集中在第三个字节，每次key stroke都会产生一个keyboard event usb packet。鼠标数据包第一个字节代表按键，当取0×00时代表没有按键；当取0×01时代表按左键；当取0×02时代表当前按键为右键。第二个字节可看作为signed byte类型，其最高位为符号位，当值为正时，代表鼠标右移像素位；值为负时，代表鼠标左移像素位。第三个字节代表垂直上下移动的偏移。此题为键盘数据包友情链接USB协议，查找值与具体键位的对应关系： http://www.usb.org/developers/hidpage/Hut1_12v2.pdf 根据第53页 usb keyboard映射表写脚本解码得出数据包 上脚本mappings = { 0x04:&quot;A&quot;, 0x05:&quot;B&quot;, 0x06:&quot;C&quot;, 0x07:&quot;D&quot;, 0x08:&quot;E&quot;, 0x09:&quot;F&quot;, 0x0A:&quot;G&quot;, 0x0B:&quot;H&quot;, 0x0C:&quot;I&quot;, 0x0D:&quot;J&quot;, 0x0E:&quot;K&quot;, 0x0F:&quot;L&quot;, 0x10:&quot;M&quot;, 0x11:&quot;N&quot;,0x12:&quot;O&quot;, 0x13:&quot;P&quot;, 0x14:&quot;Q&quot;, 0x15:&quot;R&quot;, 0x16:&quot;S&quot;, 0x17:&quot;T&quot;, 0x18:&quot;U&quot;,0x19:&quot;V&quot;, 0x1A:&quot;W&quot;, 0x1B:&quot;X&quot;, 0x1C:&quot;Y&quot;, 0x1D:&quot;Z&quot;, 0x1E:&quot;1&quot;, 0x1F:&quot;2&quot;, 0x20:&quot;3&quot;, 0x21:&quot;4&quot;, 0x22:&quot;5&quot;, 0x23:&quot;6&quot;, 0x24:&quot;7&quot;, 0x25:&quot;8&quot;, 0x26:&quot;9&quot;, 0x27:&quot;0&quot;, 0x28:&quot;\\n&quot;, 0x2a:&quot;[DEL]&quot;, 0X2B:&quot; &quot;, 0x2C:&quot; &quot;, 0x2D:&quot;-&quot;, 0x2E:&quot;=&quot;, 0x2F:&quot;[&quot;, 0x30:&quot;]&quot;, 0x31:&quot;\\\\&quot;, 0x32:&quot;~&quot;, 0x33:&quot;;&quot;, 0x34:&quot;&apos;&quot;, 0x36:&quot;,&quot;, 0x37:&quot;.&quot; } nums = [] keys = open(&apos;usbdata.txt&apos;) for line in keys: if line[0]!=&apos;0&apos; or line[1]!=&apos;0&apos; or line[3]!=&apos;0&apos; or line[4]!=&apos;0&apos; or line[9]!=&apos;0&apos; or line[10]!=&apos;0&apos; or line[12]!=&apos;0&apos; or line[13]!=&apos;0&apos; or line[15]!=&apos;0&apos; or line[16]!=&apos;0&apos; or line[18]!=&apos;0&apos; or line[19]!=&apos;0&apos; or line[21]!=&apos;0&apos; or line[22]!=&apos;0&apos;: continue nums.append(int(line[6:8],16)) keys.close() output = &quot;&quot; for n in nums: if n == 0 : continue if n in mappings: output += mappings[n] print &apos;output :\\n&apos; + output 另附鼠标脚本nums = [] keys = open(&apos;data.txt&apos;,&apos;r&apos;) posx = 0 posy = 0 for line in keys: if len(line) != 12 : continue x = int(line[3:5],16) y = int(line[6:8],16) if x &gt; 127 : x -= 256 if y &gt; 127 : y -= 256 posx += x posy += y btn_flag = int(line[0:2],16) # 1 for left , 2 for right , 0 for nothing if btn_flag == 1 : print posx , posy keys.close()","categories":[{"name":"CTF","slug":"CTF","permalink":"https://at0ngmu.github.io/categories/CTF/"}],"tags":[{"name":"原创","slug":"原创","permalink":"https://at0ngmu.github.io/tags/原创/"},{"name":"流量分析","slug":"流量分析","permalink":"https://at0ngmu.github.io/tags/流量分析/"}]}]}