{"meta":{"title":"aT0ngMu是个小机灵鬼儿づ￣3￣","subtitle":null,"description":null,"author":"aT0ngMu","url":"https://at0ngmu.github.io"},"pages":[{"title":"404","date":"2018-11-18T12:02:52.000Z","updated":"2018-11-18T12:02:52.580Z","comments":true,"path":"404/index.html","permalink":"https://at0ngmu.github.io/404/index.html","excerpt":"","text":""},{"title":"about","date":"2018-11-19T01:46:12.000Z","updated":"2018-11-19T01:47:32.604Z","comments":true,"path":"about/index.html","permalink":"https://at0ngmu.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-11-18T13:22:33.000Z","updated":"2018-11-18T13:23:19.579Z","comments":true,"path":"categories/index.html","permalink":"https://at0ngmu.github.io/categories/index.html","excerpt":"","text":""},{"title":"search","date":"2018-11-18T12:02:42.000Z","updated":"2018-11-18T12:02:42.770Z","comments":true,"path":"search/index.html","permalink":"https://at0ngmu.github.io/search/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-11-18T13:20:51.000Z","updated":"2018-11-18T13:21:36.346Z","comments":true,"path":"tags/index.html","permalink":"https://at0ngmu.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"USB流量分析","slug":"USB流量分析","date":"2018-11-19T01:55:19.000Z","updated":"2018-11-19T02:29:07.866Z","comments":true,"path":"2018/11/19/USB流量分析/","link":"","permalink":"https://at0ngmu.github.io/2018/11/19/USB流量分析/","excerpt":"","text":"USB流量分析- USB接口简介通过监听USB接口流量，可获取键盘击键，鼠标移动与点击，存储设备的明文传输通信，USB无线网卡网络传输内容等。- 题目wireshark打开数据包后发现为usb协议 USB协议数据部分在Leftover Capture Data域中，使用tshark命令将其单独提取出来tshark -r udn.pcapng -T fields -e usb.capdata &gt; usbdata.txt cat命令查看分离出的usbdata.txtcat usbdata.txt 由于USB流量分为键盘流量和鼠标流量，而键盘数据包的数据长度为八个字节，鼠标数据包的数据长度为四个字节。键盘数据包击键信息集中在第三个字节，每次key stroke都会产生一个keyboard event usb packet。鼠标数据包第一个字节代表按键，当取0×00时代表没有按键；当取0×01时代表按左键；当取0×02时代表当前按键为右键。第二个字节可看作为signed byte类型，其最高位为符号位，当值为正时，代表鼠标右移像素位；值为负时，代表鼠标左移像素位。第三个字节代表垂直上下移动的偏移。此题为键盘数据包友情链接USB协议，查找值与具体键位的对应关系： http://www.usb.org/developers/hidpage/Hut1_12v2.pdf 根据第53页 usb keyboard映射表写脚本解码得出数据包 上脚本mappings = { 0x04:&quot;A&quot;, 0x05:&quot;B&quot;, 0x06:&quot;C&quot;, 0x07:&quot;D&quot;, 0x08:&quot;E&quot;, 0x09:&quot;F&quot;, 0x0A:&quot;G&quot;, 0x0B:&quot;H&quot;, 0x0C:&quot;I&quot;, 0x0D:&quot;J&quot;, 0x0E:&quot;K&quot;, 0x0F:&quot;L&quot;, 0x10:&quot;M&quot;, 0x11:&quot;N&quot;,0x12:&quot;O&quot;, 0x13:&quot;P&quot;, 0x14:&quot;Q&quot;, 0x15:&quot;R&quot;, 0x16:&quot;S&quot;, 0x17:&quot;T&quot;, 0x18:&quot;U&quot;,0x19:&quot;V&quot;, 0x1A:&quot;W&quot;, 0x1B:&quot;X&quot;, 0x1C:&quot;Y&quot;, 0x1D:&quot;Z&quot;, 0x1E:&quot;1&quot;, 0x1F:&quot;2&quot;, 0x20:&quot;3&quot;, 0x21:&quot;4&quot;, 0x22:&quot;5&quot;, 0x23:&quot;6&quot;, 0x24:&quot;7&quot;, 0x25:&quot;8&quot;, 0x26:&quot;9&quot;, 0x27:&quot;0&quot;, 0x28:&quot;\\n&quot;, 0x2a:&quot;[DEL]&quot;, 0X2B:&quot; &quot;, 0x2C:&quot; &quot;, 0x2D:&quot;-&quot;, 0x2E:&quot;=&quot;, 0x2F:&quot;[&quot;, 0x30:&quot;]&quot;, 0x31:&quot;\\\\&quot;, 0x32:&quot;~&quot;, 0x33:&quot;;&quot;, 0x34:&quot;&apos;&quot;, 0x36:&quot;,&quot;, 0x37:&quot;.&quot; } nums = [] keys = open(&apos;usbdata.txt&apos;) for line in keys: if line[0]!=&apos;0&apos; or line[1]!=&apos;0&apos; or line[3]!=&apos;0&apos; or line[4]!=&apos;0&apos; or line[9]!=&apos;0&apos; or line[10]!=&apos;0&apos; or line[12]!=&apos;0&apos; or line[13]!=&apos;0&apos; or line[15]!=&apos;0&apos; or line[16]!=&apos;0&apos; or line[18]!=&apos;0&apos; or line[19]!=&apos;0&apos; or line[21]!=&apos;0&apos; or line[22]!=&apos;0&apos;: continue nums.append(int(line[6:8],16)) keys.close() output = &quot;&quot; for n in nums: if n == 0 : continue if n in mappings: output += mappings[n] print &apos;output :\\n&apos; + output 另附鼠标脚本nums = [] keys = open(&apos;data.txt&apos;,&apos;r&apos;) posx = 0 posy = 0 for line in keys: if len(line) != 12 : continue x = int(line[3:5],16) y = int(line[6:8],16) if x &gt; 127 : x -= 256 if y &gt; 127 : y -= 256 posx += x posy += y btn_flag = int(line[0:2],16) # 1 for left , 2 for right , 0 for nothing if btn_flag == 1 : print posx , posy keys.close()","categories":[{"name":"CTF","slug":"CTF","permalink":"https://at0ngmu.github.io/categories/CTF/"}],"tags":[{"name":"原创","slug":"原创","permalink":"https://at0ngmu.github.io/tags/原创/"},{"name":"流量分析","slug":"流量分析","permalink":"https://at0ngmu.github.io/tags/流量分析/"}]},{"title":"hello,Hexo","slug":"hello-Hexo","date":"2018-11-18T02:16:43.000Z","updated":"2018-11-18T02:16:43.093Z","comments":true,"path":"2018/11/18/hello-Hexo/","link":"","permalink":"https://at0ngmu.github.io/2018/11/18/hello-Hexo/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-11-18T01:49:33.216Z","updated":"2018-11-18T01:49:33.216Z","comments":true,"path":"2018/11/18/hello-world/","link":"","permalink":"https://at0ngmu.github.io/2018/11/18/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}